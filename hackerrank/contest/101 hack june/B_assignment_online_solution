#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cmath>
#define ll long long
#define ldb long double
#define nextLine() {int c = 0; while ((c = getchar()) != 10 && c != EOF);}
const int INF = 1 << 28;
const ldb eps = 1e-9;
const ldb pi = M_PI;
using namespace std;

int M, N;
ldb p1[252];
ldb dp[252][252];

void load() {
	cin >> M >> N;
}

ldb count_prob_less(int m)
{
	memset(dp, 0, sizeof dp);
	dp[0][0] = 1;
	for (int l = 1; l <= M; l++)
	{
		for (int n = 1; n <= M; n++)
		{
			dp[l][n] = dp[l][n - 1] + dp[l - 1][n - 1];
			if (n - 1 - m >= 0)
				dp[l][n] -= dp[l - 1][n - 1 - m];
		}
	}
	ldb up = 0, down = 0;
	ldb C = N, CM = 1;
	for (int g = 1; g <= M; g++) {
		up += dp[g][M] * C;
		down += C * CM;
		CM /= g;
		CM *= (M - g);
		C /= g + 1;
		C *= (N - g);
	}
	return up / down;
}

void solve(int test_number) {
	for (int i = 1; i <= M; i++)
		p1[i] = count_prob_less(i);
	ldb res = 0;
	for (int i = 1; i <= M; i++)
		res += i * (p1[i] - p1[i - 1]);
	cout << fixed << setprecision(5) << res << "\n";
}


int main() {
	int t;
	cin >> t;
	nextLine();
	for (int i = 0; i < t; i++)
	{
		load();
		solve(t + 1);
	}
	return 0;
}